openapi: 3.0.1
info:
  title: 'Лабораторна робота варіант 21 (5 - сервіс статей)'
  description: 'Написати сервіс статей (2000 символів). Статті є публічними для всіх, зареєстровані користувачі можуть редагувати статтю та очікувати на схвалення її модераторами (користувачі із більшими правами). Передбачити варіант редагування, коли стаття на розгляді модератором, а інший користувач її теж редагує. Модератори мають бачити статті, які очікують їх схвалення.'
  version: 1.0.0
servers:
- url: http://127.0.0.0:8080/api/v1
paths:
  /articles:
    get:
      tags:
      - article
      summary: Get list of articles
      description: Returns list of articles
      operationId: getArticles
      responses:
        200:
          description: Successful operation.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Article'
        404:
          description: Not found.
  /articleChanges:
    get:
      tags:
      - changes
      summary: Get list of articles changes
      description: Returns list of changes. Only for moderators
      operationId: getArticlesChanges
      responses:
        200:
          description: Successful operation.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArticleChange'
        404:
          description: Not found.
        401:
          $ref: '#/components/responses/UnauthorizedError'
      security:
      - bearerAuth: []
    post:
      tags:
      - changes
      summary: Create change to article
      description: Create change to article. If articleId == null, new article will be created
      operationId: changeArticle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleChange'
      responses:
        201:
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleChange'
        400:
          description: Invalid article changes supplied.
        401:
          $ref: '#/components/responses/UnauthorizedError'
      security:
      - bearerAuth: []
  /articles/{articleId}:
    get:
      tags:
      - article
      summary: Find article by ID
      description: Returns a single article
      operationId: getArticleById
      parameters:
      - name: articleId
        in: path
        description: ID of article to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
        400:
          description: Invalid ID supplied (not a number).
        404:
          description: Article not found.
    delete:
      tags:
      - article
      summary: Delete a article
      operationId: deleteArticle
      parameters:
      - name: articleId
        in: path
        description: Article id to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Successful operation.
        400:
          description: Invalid ID supplied.
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          description: Article not found.
      security:
      - bearerAuth: []
  /articleChanges/{changeId}:
    get:
      tags:
      - changes
      summary: Find article change by ID
      description: Returns a single change. Only for author and moderators
      operationId: getChangeById
      parameters:
      - name: changeId
        in: path
        description: ID of change to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleChange'
        400:
          description: Invalid ID supplied (not a number).
        404:
          description: Change not found.
        401:
          $ref: '#/components/responses/UnauthorizedError'
      security:
      - bearerAuth: []
    put:
      tags:
      - changes
      summary: Update a article change
      description: Update a article change. Only for author.
      operationId: updateChange
      parameters:
      - name: changeId
        in: path
        description: ID of change that needs to be updated
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleChange'
      responses:
        200:
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleChange'
        400:
          description: Invalid article supplied.
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          description: Article not found.
      security:
      - bearerAuth: []
    delete:
      tags:
      - changes
      summary: Delete a change
      description: Delete a change. Only for author and moderators
      operationId: deleteChange
      parameters:
      - name: changeId
        in: path
        description: Change id to delete. 
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Successful operation.
        400:
          description: Invalid ID supplied.
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          description: Article not found.
      security:
      - bearerAuth: []
  /articleChanges/{changeId}/approve:
    get:
      tags:
      - changes
      summary: Aprove a article change
      description: Aprove a article change. Only for moderators. If articleId == null, new article will be created
      operationId: aproveChange
      parameters:
      - name: changeId
        in: path
        description: ID of change that needs to be aproved
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          description: Article not found.
      security:
      - bearerAuth: []
  /user:
    post:
      tags:
      - user
      summary: Create user
      operationId: createUser
      requestBody:
        description: Created user object
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        200:
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      
  /user/login:
    get:
      tags:
      - user
      summary: Logs user into the system
      operationId: loginUser
      parameters:
      - name: username
        in: query
        description: The user name for login
        required: true
        schema:
          type: string
      - name: password
        in: query
        description: The password for login in clear text
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation. Return JWT token
          content:
            application/json:
              schema:
                type: string
                example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ"
        400:
          description: Invalid username/password supplied.
  /user/logout:
    get:
      tags:
      - user
      summary: Logs out current logged in user session
      operationId: logoutUser
      responses:
        200:
          description: Successful operation.
        401:
          $ref: '#/components/responses/UnauthorizedError'
      security:
      - bearerAuth: []
  /user/{userId}:
    get:
      tags:
      - user
      summary: Get user by id
      description: This can only be done by the logged in user and only for own account.
      operationId: getUserById
      parameters:
      - name: userId
        in: path
        required: true
        description: 'The user id that needs to be fetched.'
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: The specified user ID is invalid (not a number).
        401:
          $ref: '#/components/responses/UnauthorizedError'          
        404:
          description: A user with the specified ID was not found.
      security:
      - bearerAuth: []
    put:
      tags:
      - user
      summary: Update user
      description: This can only be done by the logged in user and only for own account.
      operationId: updateUser
      parameters:
      - name: userId
        in: path
        required: true
        description: 'The user id that needs to be updated.'
        schema:
          type: integer
          format: int64
      requestBody:
        description: 'Updated user object.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        200:
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Invalid user supplied.
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          description: User not found.
      security:
      - bearerAuth: []
    delete:
      tags:
      - user
      summary: Delete user
      description: This can only be done by the logged in user and only for own account.
      operationId: deleteUser
      parameters:
      - name: userId
        in: path
        required: true
        description: 'The user id that needs to be updated.'
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Successful operation.
        400:
          description: The specified user ID is invalid (not a number).
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          description: User not found.
      security:
      - bearerAuth: []
components:
  schemas:
    User:
      required:
      - name
      - email
      - password
      - isModerator
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        surname:
          type: string
        email:
          type: string
        password:
          type: string
          format: password
        isModerator:
          type: boolean
          default: false
      xml:
        name: User
    Article:
      required:
      - id
      - title
      - text
      - authorsId
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        text:
          type: string
          maxLength: 2000
        authorsId:
          type: array
          items:
            type: integer
            format: int64
      xml:
        name: Article
        
    ArticleChange:
      required:
      - text
      - authorId
      - id
      type: object
      properties:
        id:
          type: integer
          format: int64
        articleId:
          type: integer
          format: int64
        title:
          type: string
        text:
          type: string
          maxLength: 2000
        authorId:
          type: integer
          format: int64
      xml:
        name: ArticleChange
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid